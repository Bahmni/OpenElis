plugins {
    id "nebula.ospackage" version "3.4.0"
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://mavenrepo.openmrs.org/nexus/content/repositories/public'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories'
    }
    mavenLocal()
}

group 'org.bahmni.lab'
version project.bahmniRelease

apply plugin: 'java'

//The openelis.war & OpenElis.zip file will be copied by the CI server after the artifacts are built.
task extractWar(type: Copy) {
    from zipTree(file("${projectDir}/resources/openelis.war"))
    into file("${buildDir}/bahmni-lab")
}

task extractMigrations(type: Copy) {
    from zipTree(file("${projectDir}/resources/OpenElis.zip"))
    into file("${buildDir}/migrations")
}

task normalizeJarName(type: Copy) {
    from "${buildDir}" + "/libs/"
    into "${buildDir}" + "/libs/"
    include(project.name + '-' + project.bahmniRelease + '.jar')
    rename(project.name + '-' + project.bahmniRelease + '.jar', project.name + '.jar')
}

ospackage {
    packageName = 'bahmni-lab'
    release = System.getenv('GO_PIPELINE_COUNTER') ?: project.buildNumber
    arch = NOARCH
    os = LINUX
    user = 'bahmni'

    into '/opt/bahmni-lab'

    from("${projectDir}/resources/log4j2.xml") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'bahmni-lab/WEB-INF/classes'
    }

    from("${buildDir}/libs/bahmni-lab.jar") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'lib/'
    }

    from("${projectDir}/resources/") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'etc'
        exclude('migrateDb.sh')
        exclude('openelis.war')
        exclude('OpenElis.zip')
        exclude('*.checksum')
    }

    from("${projectDir}/scripts/rpm/") {
        fileMode = 0744
        createDirectoryEntry = true
        into 'bin'
    }

    from("${projectDir}/scripts/bahmni-lab.service") {
        fileMode = 0744
        user 'root'
        into '/usr/lib/systemd/system/'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'run'
    }

    from("${projectDir}/resources/placeholder") {
        createDirectoryEntry = true
        into 'log'
    }

    from("${buildDir}/bahmni-lab/") {
        fileMode = 0755
        createDirectoryEntry = true
        into 'bahmni-lab'
    }

    from("${buildDir}/migrations/OpenElis") {
        fileMode = 0755
        createDirectoryEntry = true
        into 'migrations'
        include('db_backup/*')
        include('liquibase/*')
        include('liquibase/lib/*')
        include('liquibase/Bahmni/*')
        include('scripts/*')
    }

    from("${projectDir}/resources/migrateDb.sh") {
        fileMode = 0744
        createDirectoryEntry = true
        into 'migrations/scripts/'
    }

    from("${projectDir}/resources/") {
        fileMode = 0644
        createDirectoryEntry = true
        into 'db-dump'
        include('openelis_demo_dump.sql')
    }

    from("${projectDir}/resources/") {
        fileMode = 0755
        into 'etc'
        include('bahmnilab_ssl.conf')
    }
}

buildRpm {
    dependsOn 'build', 'normalizeJarName', 'extractWar', 'extractMigrations'

    requires('postgresql96')

    preInstall file("${projectDir}/scripts/preinstall.sh")
    postInstall file("${projectDir}/scripts/postinstall.sh")
    preUninstall file("${projectDir}/scripts/preuninstall.sh")
}

dependencies {
    compile project(":core")
}

jar {
    manifest {
        attributes 'Main-Class': "org.bahmni.deployment.launch.Main"
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
